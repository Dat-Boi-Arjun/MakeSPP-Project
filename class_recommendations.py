# -*- coding: utf-8 -*-
"""Class_Recommendations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LDb_MEpNr8TaVA7PMDPM4ARELduNGttc
"""

"""
1 = spanish
2 = math
3 = science
4 = arts
5 = comp Sci/PE
6 = history
7 = english
"""
person1 = np.array([1, 2, 3, 4, 5, 6, 7])
person2 = np.array([1, 2, 7, 4, 5, 4, 6])

np.equal(person1, person2)

array1 = np.array([1, 2, 3, 4, 5])
array2 = np.array([1, 2, 0, 4, 0])
def schedule_similarity(array_person1, array_person2):

    non_catagorical_sim_array = np.equal(array_person1, array_person2)
                                          
    catagorical_sim_array = non_catagorical_sim_array.astype(int)

    return (np.sum(array_person1 == array_person2),catagorical_sim_array)
    
    
schedule_similarity(person1, person2)

import numpy as np
import pandas as pd
import random

interests1 = np.array([-1, 0, 1, 1, -1, 0, 1])
interests2 = np.array([-1,-1,1, 1, -1,-1, 0])
def rec(intrest1, intrest2):
  int_level = interests1 + interests2

  similarities = schedule_similarity(person1, person2)[1]

  rec_array = np.absolute((similarities * int_level))
  rec = np.random.choice(np.where(rec_array == rec_array.max())[0])


  dict = {0: "A Block", 1: "B Block",2: "C Block", 3:"D Block",4: "E Block",5 :"F Block", 6 :"G Block"} 

  print("What are your thoughts on your " + dict[rec] + " class together?")

def full_reccomendation(person1, person2, intrests1, intrests2):
  
  rec(interests1, interests2)

full_reccomendation(person1, person2, interests1, interests2)